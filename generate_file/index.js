const { Storage } = require('@google-cloud/storage');
const { BigQuery } = require('@google-cloud/bigquery');
const fs = require('fs-extra');


const bq = new BigQuery();
const datasetId = 'csv_files';
const tableId = 'files_table';

exports.readFiles = async (file, context) => {

    const pdfFile = file;
    const storage = new Storage();
    const sourceBucket = storage.bucket(pdfFile.bucket);
    const maliciousBucket = storage.bucket('cit412-malware-malicious-pdf');
    const benignBucket = storage.bucket('cit412-malware-benign-pdf');

    // Reject if file is not pdf
    if (pdfFile.contentType === 'application/pdf') {

        console.log('This is a pdf file');

        const fileName = pdfFile.name

        const fileUpload =  sourceBucket.file(fileName);

        console.log(`File name: ${fileName}`);

        const tempFilePath = `/tmp/${fileName}`;

        await fileUpload.download({ destination: tempFilePath });

        const sqlQuery = `SELECT class FROM cit412-llinh-malwarescanner.${datasetId}.${tableId} WHERE filename = @fileName`;

        const options = {
            query: sqlQuery,
            params: {
                fileName: fileName
            }
        };

        // Run the query
        const [rows] = await bq.query(options);

        const key= rows[0]
        if (key.class == 'Malicious') {
            await maliciousBucket.upload(tempFilePath, {destination: fileName})
            console.log('This is a maliciuos file')
        } else {
            await benignBucket.upload(tempFilePath, {destination: fileName})
            console.log('This is a benign file')
        }    
        
        await sourceBucket.file(fileName).delete();
        console.log(`The ${fileName} is deleted.`);

    } else {
        console.log('This is not a valid file');
    }
};


